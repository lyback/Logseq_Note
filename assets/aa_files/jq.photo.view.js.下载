(function ($) {
    var PhotoConstruct = function (ele, opt) {
        this.$ele = ele;
        this.scaleParams = 1;
        this.angle = 0;
        this.initWidth = 0;
        this.initHeight = 0;
        this.defaults = {
            imgArr: [],
            position: 0
        };
        this.options = $.extend({}, this.defaults, opt);
    };
    PhotoConstruct.prototype = {
        init: function () {
            this.render();
            this.bind();
            this.setInitPosition();
            this.moveAble(this.oBlock);
        },
        render: function () {
            this.$ele.find('body').append(
                "<div class='draggable-mask'>" +
                    "<span class='number-show'>" +
                        "<label class='current'>" + (this.options.position + 1) + "</label>" +
                        "<label> / </label>" +
                        "<label class='total'>" + this.options.imgArr.length + "</label>" +
                    "</span>" +
                    "<img class='loading' src='" + SYXZ.CDN + '/static/images/ico/loading.gif' + "'>" +
                    "<span class='photo-close'><img src='"+ SYXZ.CDN +"/static/images/ico/icon-close.png'></span>" +
                    "<img class='draggable-img' id='draggable-img' draggable='false' src=" + this.options.imgArr[this.options.position] + " />" +
                    "<div class='tool-bar-wrapper' onselectstart='return false'>" +
                        "<div class='tool-bar clear'>" +
                            "<span title='放大' class='zoom-in'><img src='"+ SYXZ.CDN +"/static/images/ico/zoom-in.png'></span>" +
                            "<span title='缩小' class='zoom-out'><img src='"+ SYXZ.CDN +"/static/images/ico/zoom-out.png'></span>" +
                            "<span title='还原' class='recovery'><img src='"+ SYXZ.CDN +"/static/images/ico/recovery.png'></span>" +
                            "<span title='向左旋转' class='rotate-left'><img src='"+ SYXZ.CDN +"/static/images/ico/refresh.png'></span>" +
                        "</div>" +
                    "</div>" +
                    (this.options.imgArr.length > 1 ? "<ul class='navigation'>" +
                        "<li class='last'><img src='"+ SYXZ.CDN +"/static/images/ico/arrow-left.png'></li>" +
                        "<li class='next'><img src='"+ SYXZ.CDN +"/static/images/ico/arrow-right.png'></li>" +
                    "</ul>" : '') +
                "</div>");
            this.WINDOW = $(window);
            this.DRAGGABLEMASK = $('.draggable-mask');
            this.DRAGGABLEIMG = $('.draggable-img');
            this.LOADING = $('.loading');
            this.ZOOMINBTN = $('.zoom-in');
            this.ZOOMOUTBTN = $('.zoom-out');
            this.RECOVERBTN = $('.recovery');
            this.ROTATEBTN = $('.rotate-left');
            this.TOOLBTN = $('.tool-bar');
            this.CLOSEBTN = $('.photo-close');
            this.LAST = $('.last');
            this.NEXT = $('.next');
        },
        bind: function () {
            $('body').css({
                width: '100%',
                height: '100%',
                overflow: 'hidden'
            });
            this.DRAGGABLEMASK.fadeIn(200);
            this.ZOOMINBTN.off('click').on('click', $.proxy(this.zoomIn, this));
            this.ZOOMOUTBTN.off('click').on('click', $.proxy(this.zoomOut, this));
            this.RECOVERBTN.off('click').on('click', $.proxy(this.recoverInitSize, this));
            this.WINDOW.off('resize').on('resize', $.proxy(this.setInitPosition, this));

            this.oBlock = document.getElementsByClassName('draggable-img')[0];
            if (document.addEventListener) {
                this.oBlock.addEventListener('DOMMouseScroll', $.proxy(this.scrollFunc, this), false);
            }
            this.oBlock.onmousewheel = $.proxy(this.scrollFunc, this);

            this.ROTATEBTN.off('click').on('click', $.proxy(this.rotate, this));
            this.CLOSEBTN.off('click').on('click', $.proxy(this.closeMask, this));
            this.LAST.off('click').on('click', $.proxy(this.last, this));
            this.NEXT.off('click').on('click', $.proxy(this.next, this));
        },
        //  设置图片的初始位置
        setInitPosition: function () {
            var $this = this;
            this.oBlock.onload = function() {
                $this.DRAGGABLEIMG.css({
                    maxHeight : '90%',
                    maxWidth: 1000
                })
                $this.initWidth = $this.DRAGGABLEIMG.width();
                $this.initHeight = $this.DRAGGABLEIMG.height();
                $this.LOADING.hide();
                $this.DRAGGABLEIMG.css({
                    left: ($this.WINDOW.width() -$this.DRAGGABLEIMG.width()) / 2,
                    top: ($this.WINDOW.height() - $this.DRAGGABLEIMG.height()) / 2
                });
            }
        },
        //  放大
        zoomIn: function () {
            this.scale(1);
        },
        //  缩小
        zoomOut: function () {
            this.scale(-1);
        },
        //  还原
        recoverInitSize: function () {
            this.scaleParams = 1;
            this.angle = 0;
            this.DRAGGABLEIMG.css({
                transform: 'scale(' + this.scaleParams + ',' + this.scaleParams + ')' + ' rotateZ(' + this.angle + 'deg)'
            });
            this.setInitPosition();
        },
        //  设置图片尺寸随鼠标滚轮缩放
        scrollFunc: function (ev) {
            var event = ev || window.event;
            if (event.wheelDelta) {
                this.scale(event.wheelDelta);
            } else if (event.detail) {
                this.scale(-event.detail);
            }
        },
        //  根据鼠标滚轮的方向设置缩放系数
        scale: function (state) {
            if (state > 0) {
                this.scaleParams += 0.2;
            } else {
                this.scaleParams -= 0.2;
                if (this.scaleParams <= 0.2) {
                    this.scaleParams = 0.2;
                }
            }
            this.DRAGGABLEIMG.css({
                transform: 'scale(' + this.scaleParams + ',' + this.scaleParams + ')' + ' rotateZ(' + this.angle + 'deg)'
            })
        },
        //  设置图片的可拖拽
        moveAble: function (el) {
            var self = this;
            el.onmousedown = function (ev) {
                self.TOOLBTN.hide();
                self.LAST.hide();
                self.NEXT.hide();
                var event = ev || window.event;
                var startX = event.clientX - el.offsetLeft;
                var startY = event.clientY - el.offsetTop;
                document.onmousemove = function (ev) {
                    var event = ev || window.event;
                    var X = event.clientX;
                    var Y = event.clientY;
                    el.style.left = (X - startX) + 'px';
                    el.style.top = (Y - startY) + 'px';
                }
            };
            document.onmouseup = function () {
                self.TOOLBTN.show();
                self.LAST.show();
                self.NEXT.show();
                document.onmousemove = null;
            }
        },
        //  翻转
        rotate: function () {
            this.angle -= 90;
            this.scaleParams = 1;
            this.DRAGGABLEIMG.css({
                transform: 'scale(' + this.scaleParams + ',' + this.scaleParams + ')' + 'rotateZ(' + this.angle + 'deg)'
            });
        },
        //  切换上一张
        last: function () {
            if(this.options.imgArr.length === 1) {
                return
            }
            var $this = this;
            $this.options.position--;
            if($this.options.position < 0) {
                $this.options.position = $this.options.imgArr.length - 1;
            }
            $('.number-show .current').text($this.options.position + 1);
            this.DRAGGABLEIMG.fadeOut(200, function () {
                $this.DRAGGABLEIMG.attr('src', $this.options.imgArr[$this.options.position]).fadeIn(200);
                $this.recoverInitSize();
            });
        },
        //  切换下一张
        next: function() {
            if(this.options.imgArr.length === 1) {
                return
            }
            var $this = this;
            $this.options.position++;
            if($this.options.position === $this.options.imgArr.length) {
                $this.options.position = 0;
            }
            $('.number-show .current').text($this.options.position + 1);
            this.DRAGGABLEIMG.fadeOut(200, function () {
                $this.DRAGGABLEIMG.attr('src', $this.options.imgArr[$this.options.position]).fadeIn(200);
                $this.recoverInitSize();
            });
        },
        //  关闭弹层
        closeMask: function () {
            var $this = this;
            $this.DRAGGABLEMASK.fadeOut(200, function () {
                $this.DRAGGABLEMASK.remove();
            });
            $('body').css({
                width: '100%',
                height: 'auto',
                overflow: 'visible'
            });
        }
    };
    $.fn.setPhotoWatch = function (options) {
        var setPhotoWatch = new PhotoConstruct(this, options);
        setPhotoWatch.init();
        return this;
    }
})(jQuery);
